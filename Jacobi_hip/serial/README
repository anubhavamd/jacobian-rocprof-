#**************************************************************************
#* Copyright (c) 2019, Advanced Micro Devices, Inc. All rights reserved.
#**************************************************************************

====================================================
Description document for the GPU-based Jacobi solver
====================================================

Contents:
---------
1)	Application overview
2)	Build instructions
3)	Run instructions


=======================
1) Application overview
=======================

This is a distributed Jacobi solver, using GPUs to perform the computation and MPI for halo exchanges.
It uses a 2D domain decomposition scheme to allow for a better computation-to-communication ratio than just 1D domain decomposition.

The flow of the application is as follows:

a)	The MPI environment is initialized
b)	The command-line arguments are parsed, and a MPI grid and mesh are created
c)	Resources (including host and device memory blocks, streams etc.) are initialized
d)	The Jacobi loop is executed; in every iteration, the local block is updated and then the halo values are exchanged; the algorithm
	converges when the global residue for an iteration falls below a threshold, but it is also limited by a maximum number of
	iterations (irrespective if convergence has been achieved or not)
e)	Run measurements are displayed and resources are disposed

The application uses the following command-line arguments:
a)	-g x y		-	mandatory argument for the process topology, "x" denotes the number of processes on the X direction (i.e. per row) and
					"y" denotes the number of processes on the Y direction (i.e. per column); the topology size must always match the number of
					available processes (i.e. the number of launched MPI processes must be equal to x * y)
b)	-m dx dy 	-	optional argument indicating the size of the local (per-process) domain size; if it is omitted, the size will default to
					DEFAULT_DOMAIN_SIZE as defined in "defines.h"
c)	-h | --help	-	optional argument for printing help information; this overrides all other arguments

=====================
2) Build instructions
=====================

To build the application, please ensure that the following are available on the platform:

a) an MPI implementation
b) ROCm 2.1 or later.

make

===================
3) Run instructions
===================

To run use:
mpiexec -np 2 ./Jacobi_hip -g 2 1

